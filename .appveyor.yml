environment:

    matrix:
        - TARGET_ARCH: x86
          CONDA_PY: 27
          CONDA_INSTALL_LOCN: C:\\Miniconda

        - TARGET_ARCH: x64
          CONDA_PY: 27
          CONDA_INSTALL_LOCN: C:\\Miniconda-x64

        - TARGET_ARCH: x86
          CONDA_PY: 35
          CONDA_INSTALL_LOCN: C:\\Miniconda35

        - TARGET_ARCH: x64
          CONDA_PY: 35
          CONDA_INSTALL_LOCN: C:\\Miniconda35-x64

        - TARGET_ARCH: x86
          CONDA_PY: 36
          CONDA_INSTALL_LOCN: C:\\Miniconda36

        - TARGET_ARCH: x64
          CONDA_PY: 36
          CONDA_INSTALL_LOCN: C:\\Miniconda36-x64

    BINSTAR_TOKEN:
        secure: XISjzlQnnljKYlYtLQlX1fYypOF6ZwqFhxUMeTApnz/jsLO2w8ummoGC2wCa4eiC


# We always use a 64-bit machine, but can build x86 distributions
# with the TARGET_ARCH variable.
platform:
    - x64

install:
    # If there is a newer build queued for the same PR, cancel this one.
    - cmd: |
        powershell -Command "(New-Object Net.WebClient).DownloadFile('https://raw.githubusercontent.com/conda-forge/conda-forge-build-setup-feedstock/master/recipe/ff_ci_pr_build.py', 'ff_ci_pr_build.py')"
        ff_ci_pr_build -v --ci "appveyor" "%APPVEYOR_ACCOUNT_NAME%/%APPVEYOR_PROJECT_SLUG%" "%APPVEYOR_BUILD_NUMBER%" "%APPVEYOR_PULL_REQUEST_NUMBER%"
        del ff_ci_pr_build.py

    # Cywing's git breaks conda-build. (See https://github.com/conda-forge/conda-smithy-feedstock/pull/2.)
    - cmd: rmdir C:\cygwin /s /q

    # Add path, activate `conda` and update conda.
    - cmd: call %CONDA_INSTALL_LOCN%\Scripts\activate.bat
    - cmd: conda.exe update --yes --quiet conda

    - cmd: set PYTHONUNBUFFERED=1

    # Add our channels.
    - cmd: conda.exe config --set show_channel_urls true
    - cmd: conda.exe config --remove channels defaults
    - cmd: conda.exe config --add channels defaults
    - cmd: conda.exe config --add channels conda-forge

    # Configure the VM.
    - cmd: conda.exe install -n root --quiet --yes conda-forge-build-setup
    - cmd: run_conda_forge_build_setup
    # Microsoft MPI
    - "powershell conf\\ci\\appveyor\\install-msmpi.ps1"
    - "SetEnvMPI.cmd"

    # Skip .NET project specific build phase.
build: off

test_script:
    - "set MPI=msmpi"
    - conda.exe build recipe --quiet
    - conda.exe install -n root --yes --use-local pylbm
    # Run the tests outside the source tree.
    - conda.exe install -n root --yes pytest nose
    - nosetests

on_success:
    - echo %APPVEYOR_REPO_TAG%
    #- cmd: SET PATH=%CONDA_INSTALL_LOCN%;%CONDA_INSTALL_LOCN%\Scripts;%PATH%
    # Write the output file location to a file...cannot simply use conda build --output
    # because astropy_helpers prints out a message when it is freezing the version number during setup.
    - python -c "from conda_build.api import get_output_file_path; p=get_output_file_path('recipe'); f=open('to_upload.txt', 'w');f.write(p)"
    # ...so that we can set a variable to the name of that output file.
    - set /P BUILT_PACKAGE=<to_upload.txt
    - echo %BUILT_PACKAGE%
    # If this build is because of a tag make the conda package and upload it.
    - cmd:  if "%APPVEYOR_REPO_TAG%"=="true" anaconda -t %BINSTAR_TOKEN% upload -u pylbm --force %BUILT_PACKAGE%
